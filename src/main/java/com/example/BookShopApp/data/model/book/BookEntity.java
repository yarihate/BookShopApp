package com.example.BookShopApp.data.model.book;

import com.example.BookShopApp.data.model.author.AuthorEntity;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.time.LocalDate;

@Entity
@Table(name = "books")
@ApiModel(description = "entity representing a book")
public class BookEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automatically")
    private int id;
    @Column(columnDefinition = "DATE NOT NULL")
    @ApiModelProperty("date of book publication")
    private LocalDate pubDate;
    @Column(columnDefinition = "SMALLINT NOT NULL")
    @ApiModelProperty("if isBestseller = 1, so the book is considered to be a bestseller")
    private short isBestseller;
    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("book title")
    private String title;
    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("book image")
    private String image;
    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;
    @Column(columnDefinition = "INT NOT NULL", name = "price")
    @ApiModelProperty("book price without discount")
    @JsonProperty("price")
    private Integer priceOld;
    @Column(columnDefinition = "SMALLINT NOT NULL DEFAULT 0", name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("discount value for a book")
    private Double price;

    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    @JsonIgnore
    private AuthorEntity author;

    @JsonProperty
    public Integer discountPrice() {
        return priceOld - Math.toIntExact(Math.round(price * priceOld));
    }

    @JsonGetter("authors")
    public String authorsFullName() {
        return author.toString();
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public LocalDate getPubDate() {
        return pubDate;
    }

    public void setPubDate(LocalDate pubDate) {
        this.pubDate = pubDate;
    }

    public short getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(short isBestseller) {
        this.isBestseller = isBestseller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer priceOld) {
        this.priceOld = priceOld;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public AuthorEntity getAuthor() {
        return author;
    }

    public void setAuthor(AuthorEntity author) {
        this.author = author;
    }

    @Override
    public String toString() {
        return "BookEntity{" +
                "id=" + id +
                ", pubDate=" + pubDate +
                ", isBestseller=" + isBestseller +
                ", slug='" + slug + '\'' +
                ", title='" + title + '\'' +
                ", image='" + image + '\'' +
                ", description='" + description + '\'' +
                ", price='" + priceOld + '\'' +
                ", discount=" + priceOld +
                '}';
    }
}
